name: "dlang-release"
description: "Create a release of the repository"
inputs:
  token:
    description: "Github token"
    required: true
  branch:
    description: "The branch on which create a release"
    required: false
    default: "main"
  is-executable:
    description: "Whether the project builds an executable"
    required: false
    default: 'false'
  gpg-sign-key:
    description: "The private key to sign artifacts"
    required: true
  gpg-key-passphrase:
    description: "The passphrase to unlock the private key"
    required: true
  gpg-key-fingerprint:
    description: "The fingerprint of the key"
    required: true
  sign-keyserver:
    description: "The server where is hosted the key"
    required: true

runs:
  using: "composite"
  steps:
    - uses: danysk/action-checkout@0.2.1

    - uses: dlang-community/setup-dlang@v1
      with:
        compiler: "ldc-latest"

    - name: build and strip executable
      if: ${{ inputs.is-executable }}
      id: strip
      shell: bash
      run: |
        dub build -b release
        EXECUTABLES="$(find . -maxdepth 1 -perm -111 -type f)"
        strip ${EXECUTABLES}
        echo "EXECUTABLES=${EXECUTABLES}" >> $GITHUB_ENV

    - name: checksum and sign artifacts
      id: checksign
      if: ${{ inputs.is-executable }}
      uses: tristan-weil/ghaction-checksum-sign-artifact@v1.0.1
      with:
        path: ${{ env.EXECUTABLES }}
        checksum_digests: "sha512"
        checksum_output: "artifact_one_file"
        sign_key: ${{ inputs.gpg-sign-key }}
        sign_key_passphrase: ${{ inputs.gpg-key-passphrase }}
        sign_key_fingerprint: ${{ inputs.gpg-key-fingerprint }}
        sign_keyserver: ${{ inputs.sign-keyserver}}
      
    - name: set artifacts
      if: ${{ inputs.is-executable }}
      shell: bash
      run: |
        EXECUTABLES="${{ env.EXECUTABLES }}"
        for EXE in $EXECUTABLES ; do
          find . -maxdepth 1 -ipath "$EXE*" -type f -printf "%f,"
          ARTIFACTS="${ARTIFACTS}$(find . -maxdepth 1 -ipath "$EXE*" -type f -printf "%f,")"; 
        done
        echo "ARTIFACTS=${ARTIFACTS}" >> $GITHUB_ENV

    - name: set empty artifacts
      if: ${{ ! inputs.is-executable }}
      shell: bash
      run: echo "ARTIFACTS=''" >> $GITHUB_ENV

    - name: "Repository next tag and changelog"
      id: degast-metadata
      uses: asperan/degast-action@v1

    - name: create-release
      uses: ncipollo/release-action@v1
      with:
        tag: "${{ steps.degast-metadata.outputs.nextTag }}"
        commit: ${{ inputs.branch }}
        body: "${{ steps.degast-metadata.outputs.changelog }}"
        token: ${{ inputs.token }}
        artifacts: "${{ env.ARTIFACTS }}"